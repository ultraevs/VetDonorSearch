definitions:
  model.ClinicCreateRequest:
    properties:
      Name:
        type: string
      address:
        type: string
      email:
        type: string
      password:
        type: string
    required:
    - Name
    - address
    - email
    - password
    type: object
  model.CodeResponse:
    properties:
      code:
        type: string
      message:
        type: string
    type: object
  model.CreateUserOtherInfo:
    properties:
      about:
        type: string
      age:
        type: string
      city:
        type: string
      email:
        type: string
      gender:
        type: string
      name:
        type: string
      patronymic:
        type: string
      surname:
        type: string
    type: object
  model.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  model.ForgotRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  model.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.NewPassword:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.OneOfUserClinicQuestionnaireResponse:
    properties:
      age:
        type: string
      bloodType:
        type: string
      bloodTypes:
        additionalProperties: true
        type: object
      breed:
        type: string
      contacts:
        type: string
      petName:
        type: string
      workHours:
        type: string
    required:
    - age
    - bloodType
    - bloodTypes
    - breed
    - contacts
    - petName
    - workHours
    type: object
  model.QuestionnaireRequest:
    type: object
  model.RequestBody:
    properties:
      id:
        type: integer
    type: object
  model.RequestUpdateStat:
    properties:
      donationType:
        type: string
      email:
        type: string
    type: object
  model.RequestUserOtherInfo:
    properties:
      email:
        type: string
    type: object
  model.UserCreateRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - email
    - name
    - password
    type: object
  model.UserInfo:
    properties:
      email:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/check_donation:
    post:
      consumes:
      - application/json
      description: Загрузка справки пользователя.
      parameters:
      - description: Адрес электронной почты пользователя
        in: formData
        name: email
        required: true
        type: string
      - description: Тип донации пользователя
        in: formData
        name: type
        required: true
        type: string
      - description: Фотография пользователя
        in: formData
        name: photo
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: Фотография успешно загружена
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось загрузить фотографию
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Загрузить справку конкретного юзера
      tags:
      - Stats
  /v1/clinic_create:
    post:
      consumes:
      - application/json
      description: Создает новый аккаунт клиники с предоставленным email, паролем,
        именем и адрессом.
      parameters:
      - description: Запрос на создание пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.ClinicCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Аккаунт клиники успешно создан
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось создать аккаунт клиники
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Создать новоый аккаунт клиники
      tags:
      - Auth
  /v1/create_other_info:
    post:
      description: Создает анкету юзера для данных в профиле
      parameters:
      - description: Запрос на создание анкеты пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.CreateUserOtherInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное создание анкеты
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось создать анкету
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Создать анкету юзера
      tags:
      - User
  /v1/create_questionnaire:
    post:
      description: Создает анкету пользователя или клиники
      parameters:
      - description: Запрос на создание анкеты пользователя или клиники
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.QuestionnaireRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное создание анкеты
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось создать анкету
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Создать анкету
      tags:
      - User
  /v1/delete_application:
    post:
      consumes:
      - application/json
      description: Удаляет запись по указанному айди.
      parameters:
      - description: Запрос на удаление заявки
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RequestBody'
      produces:
      - application/json
      responses:
        "200":
          description: Заявка успешно удалена
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось удалить заявку
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Удалить выполненную заявку из БД
      tags:
      - Stats
  /v1/forgot:
    post:
      consumes:
      - application/json
      description: Инициирует восстановление пароля по email.
      parameters:
      - description: Запрос на инициацию восстановления пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.ForgotRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Процесс восстановления начат
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось начать процесс восстановления
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Восстановление
      tags:
      - Auth
  /v1/get_all_clinic_cards:
    get:
      consumes:
      - application/json
      description: Возвращает все карточеки клиник.
      produces:
      - application/json
      responses:
        "200":
          description: Карточки получены
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось получить карточки
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Все карточки клиник
      tags:
      - Cards
  /v1/get_all_donations:
    get:
      consumes:
      - application/json
      description: Получает все справки о новых донациях юзеров.
      produces:
      - application/json
      responses:
        "200":
          description: Заявки успешно получены
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось получить заявки
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Получить все справки о донациях юзеров
      tags:
      - Stats
  /v1/get_all_user_cards:
    get:
      consumes:
      - application/json
      description: Возвращает все карточки нуждающихся.
      produces:
      - application/json
      responses:
        "200":
          description: Карточки получены
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось получить карточки
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Все карточки юзеров
      tags:
      - Cards
  /v1/get_clinic_cards:
    get:
      consumes:
      - application/json
      description: Возвращает 10 карточек клиник.
      produces:
      - application/json
      responses:
        "200":
          description: Карточки получены
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось получить карточки
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Первые 10 карточек клиник
      tags:
      - Cards
  /v1/get_user_cards:
    get:
      consumes:
      - application/json
      description: Возвращает 10 карточек нуждающихся.
      produces:
      - application/json
      responses:
        "200":
          description: Карточки получены
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось получить карточки
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Первые 10 карточек юзеров
      tags:
      - Cards
  /v1/get_user_stats/{key}:
    get:
      consumes:
      - application/json
      description: Статистика донаций пользователя.
      parameters:
      - description: user's email key
        in: path
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Статистика получена
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось получить статистику
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Статистика конкретного юзера
      tags:
      - Stats
  /v1/login:
    post:
      consumes:
      - application/json
      description: Авторизует пользователя с предоставленным email и паролем.
      parameters:
      - description: Запрос на авторизацию пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь авторизован
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось авторизовать пользователя
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Логин
      tags:
      - Auth
  /v1/logout:
    get:
      consumes:
      - application/json
      description: Выполняет выход из аккаунта с сбросом cookie.
      produces:
      - application/json
      responses:
        "200":
          description: Выход выполнен
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось выполнить выход из аккаунта пользователя
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Выход из акканута
      tags:
      - Auth
  /v1/mark:
    post:
      description: Помещает анкету в отдельную базу нуждающихся
      parameters:
      - description: Запрос на перемещение анкеты пользователя в раздел нуждающихся
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Успешное перемещение анкеты
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось переместить анкету
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Пометить анкету как нуждающегося
      tags:
      - User
  /v1/newpass:
    get:
      consumes:
      - application/json
      description: Новый пароль для восстановления пароля по email.
      parameters:
      - description: Токен восстановления пароля
        in: query
        name: token
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Процесс восстановления завершен
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось завершить процесс восстановления
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Новый пароль
      tags:
      - Auth
    post:
      consumes:
      - application/json
      description: Сохранение нового пароля .
      parameters:
      - description: Новый пароль пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.NewPassword'
      produces:
      - application/json
      responses:
        "200":
          description: Пароль сохранен
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось сохранить пароль
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Добавление нового пароля в БД
      tags:
      - Auth
  /v1/other_info:
    get:
      description: Получает анкету пользователя для профиля
      parameters:
      - description: Запрос на получение анкеты пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RequestUserOtherInfo'
      produces:
      - application/json
      responses:
        "200":
          description: Успешно получена анкета
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось получить анкету
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Получить анкету юзера
      tags:
      - User
  /v1/profile:
    get:
      consumes:
      - application/json
      description: Возвращает профиль пользователя.
      produces:
      - application/json
      responses:
        "200":
          description: Профиль получен
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось получить профиль
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Профиль
      tags:
      - User
  /v1/profile/{key}:
    get:
      consumes:
      - application/json
      description: Возвращает профиль другого пользователя.
      parameters:
      - description: user's email key
        in: path
        name: key
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Профиль получен
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось получить профиль
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Чужой Профиль
      tags:
      - User
  /v1/questionnaire:
    get:
      consumes:
      - application/json
      description: Возвращает анкету пользователя для старнички "profile".
      produces:
      - application/json
      responses:
        "200":
          description: Анкета получена
          schema:
            $ref: '#/definitions/model.OneOfUserClinicQuestionnaireResponse'
        "400":
          description: Не удалось получить анкету
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Анкета
      tags:
      - User
  /v1/update_user_stats:
    put:
      consumes:
      - application/json
      description: Статистика донаций пользователя.
      parameters:
      - description: Запрос на получение статистики юзера
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.RequestUpdateStat'
      produces:
      - application/json
      responses:
        "200":
          description: Статистика получена
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось получить статистику
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Обновить статистику конкретного юзера
      tags:
      - Stats
  /v1/user_create:
    post:
      consumes:
      - application/json
      description: Создает нового пользователя с предоставленным email, паролем и
        именем.
      parameters:
      - description: Запрос на создание пользователя
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/model.UserCreateRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Пользователь успешно создан
          schema:
            $ref: '#/definitions/model.CodeResponse'
        "400":
          description: Не удалось создать пользователя
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Создать нового пользователя
      tags:
      - Auth
swagger: "2.0"
